#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

test "" = "$(head -1 "$1" | grep -vE '^((fixup\!|squash\!) )?(DIO+\-[0-9]+:|NOJIRA:|Merge branch|Merge remote-tracking branch|Revert).+')" || {
  echo "${RED}Error:${NC} Aborting due to invalid commit message."
  echo "${RED}-->${NC} Commit message needs to be prefixed by either pull-request or JIRA number."
  echo "    e.g. "DIO-123: you commit message" or "NOJIRA: you commit message""
  echo "${RED}-->${NC} Rejected your commit..."
  cat $1 | while read line; do
    [ `expr "$line" : "^#"` -gt 0 ] && break
    echo $line
  done
  exit 1
}
